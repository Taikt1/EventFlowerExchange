[
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "CreateShipper",
    "RelativePath": "api/Account/CreateAccount/Shipper",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.SignUpShipper",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "CreateStaff",
    "RelativePath": "api/Account/CreateAccount/Staff",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.SignUpStaff",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "DeleteAccount",
    "RelativePath": "api/Account/DisableAccount/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "GetAccountByEmailFromAPIAsync",
    "RelativePath": "api/Account/GetAccountByEmail/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.Account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "GetAccountByIdFromAPIAsync",
    "RelativePath": "api/Account/GetAccountById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.Account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "GetMonthlyRegisterCustomerStatistics",
    "RelativePath": "api/Account/GetMonthlyRegisterCustomerStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SWP391.EventFlowerExchange.Domain.Entities.GetRegisterCustomerStatistic, SWP391.EventFlowerExchange.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SignInFromAPIAsync",
    "RelativePath": "api/Account/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.SignIn",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "LoginGoogleFromAPIAsync",
    "RelativePath": "api/Account/LoginByGoogle/{token}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "RemoveAccount",
    "RelativePath": "api/Account/RemoveAccount/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "ResetPassword",
    "RelativePath": "api/Account/ResetPassword",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "newPassword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SearchAccountsByAddress",
    "RelativePath": "api/Account/SearchAccounts/{address}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "address",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SearchAccountsBySalary",
    "RelativePath": "api/Account/SearchAccounts/{minSalary}/{maxSalary}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "minSalary",
        "Type": "System.Single",
        "IsRequired": true
      },
      {
        "Name": "maxSalary",
        "Type": "System.Single",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SearchShipperByAddress",
    "RelativePath": "api/Account/SearchShipper/{address}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "address",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SendOTPFromAPIAsync",
    "RelativePath": "api/Account/SendOTP",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SignUpBuyerFromAPIAsync",
    "RelativePath": "api/Account/SignUp/Buyer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.SignUpBuyer",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "SignUpSeller",
    "RelativePath": "api/Account/SignUp/Seller",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.SignUpSeller",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "UpdateAccountFromAPIAsync",
    "RelativePath": "api/Account/UpdateAccount",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "account",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.UpdateAccount",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "UpdateAccountImageAsync",
    "RelativePath": "api/Account/UpdateAccountImage",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "url",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "VerifyOTPFromAPIAsync",
    "RelativePath": "api/Account/VerifyOTP",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "otp",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "ViewAccountBuyerByOrderId",
    "RelativePath": "api/Account/ViewAccountBuyerByOrderId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.Account",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "ViewAllAccount",
    "RelativePath": "api/Account/ViewAllAccount",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.AccountController",
    "Method": "ViewAllAccountByRole",
    "RelativePath": "api/Account/ViewAllAccount/{role}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.CartController",
    "Method": "CreateCartByUserEmail",
    "RelativePath": "api/Cart/CreateCartByUserEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.CartController",
    "Method": "CreateCartItem",
    "RelativePath": "api/Cart/CreateCartItem",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartItem",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateCartItem",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.CartController",
    "Method": "GetCountCartItemByUserEmail",
    "RelativePath": "api/Cart/GetCountCartItemByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int32",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.CartController",
    "Method": "RemoveCartItem",
    "RelativePath": "api/Cart/RemoveCartItem",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "productid",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.CartController",
    "Method": "ViewCartByUserEmail",
    "RelativePath": "api/Cart/ViewCartByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "CreateDeliveryLogAsync",
    "RelativePath": "api/DeliveryLog/CreateDeliveryLog",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDeliveryLog",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateDeliveryLog",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "UpdateDeliveryLogDeliveringStatusAsync",
    "RelativePath": "api/DeliveryLog/UpdateDeliveryLogDeliveringStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "UpdateDeliveryLogFailStatusAsync",
    "RelativePath": "api/DeliveryLog/UpdateDeliveryLogFailStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "url",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "reason",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "UpdateDeliveryLogSuccessStatusAsync",
    "RelativePath": "api/DeliveryLog/UpdateDeliveryLogSuccessStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "url",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "ViewAllDeliveryLogAsync",
    "RelativePath": "api/DeliveryLog/ViewAllDeliveryLog",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "ViewDeliveryLogByOrderIdAsync",
    "RelativePath": "api/DeliveryLog/ViewDeliveryLogByOrderId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "ViewDeliveryLogDeliveringByShipperId",
    "RelativePath": "api/DeliveryLog/ViewDeliveryLogDeliveringByShipperEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.DeliveryLog",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "ViewDeliveryLogByShipperIdAsync",
    "RelativePath": "api/DeliveryLog/ViewDeliveryLogShipperByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.DeliveryLogController",
    "Method": "ViewDeliveryTimeAsync",
    "RelativePath": "api/DeliveryLog/ViewDeliveryTime",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.DeliveryTime",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.FollowController",
    "Method": "CheckFollowByUserEmail",
    "RelativePath": "api/Follow/CheckFollowByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "followerEmail",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sellerEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.FollowController",
    "Method": "CreateFollow",
    "RelativePath": "api/Follow/CreateFollow",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "follower",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateFollower",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.FollowController",
    "Method": "GetCountFollowByUserEmail",
    "RelativePath": "api/Follow/GetCountFollowByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.FollowController",
    "Method": "RemoveAccount",
    "RelativePath": "api/Follow/RemoveFollower",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "followerEmail",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sellerEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.FollowController",
    "Method": "ViewFollowerByUserEmail",
    "RelativePath": "api/Follow/ViewFollowerByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.MessageController",
    "Method": "CreateMessage",
    "RelativePath": "api/Message/CreateMessage",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "message",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateMessage",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.MessageController",
    "Method": "GetMessagesByReceiverId",
    "RelativePath": "api/Message/GetChatListByAccountEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "receiverEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.MessageController",
    "Method": "GetMessagesByReceiverId",
    "RelativePath": "api/Message/GetMessages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "senderEmail",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "receiverEmail",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SWP391.EventFlowerExchange.Domain.ObjectValues.Message, SWP391.EventFlowerExchange.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "CountNotificationsByEmail",
    "RelativePath": "api/Notification/CountNotificationsByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "CountShopNotificationsByEmail",
    "RelativePath": "api/Notification/CountShopNotificationsByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "CreateNotification",
    "RelativePath": "api/Notification/CreateNotification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createNotificationDto",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateNotification",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "CreateShopNotification",
    "RelativePath": "api/Notification/CreateShopNotification",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createNotificationDto",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateShopNotification",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewAllNotification",
    "RelativePath": "api/Notification/ViewAllNotification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewAllShopNotification",
    "RelativePath": "api/Notification/ViewAllShopNotification",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewNotificationById",
    "RelativePath": "api/Notification/ViewNotificationById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewNotificationByUserEmail",
    "RelativePath": "api/Notification/ViewNotificationByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewShopNotificationById",
    "RelativePath": "api/Notification/ViewShopNotificationById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.NotificationController",
    "Method": "ViewShopNotificationByUserEmail",
    "RelativePath": "api/Notification/ViewShopNotificationByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "CancelOrderByBuyerAsync",
    "RelativePath": "api/Order/CancelOrderByBuyer",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "reason",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "role",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "CheckOutOrderAsync",
    "RelativePath": "api/Order/CheckOutOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "checkOutBefore",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CheckOutBefore",
        "IsRequired": true
      },
      {
        "Name": "value",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "CreateListOrderAsync",
    "RelativePath": "api/Order/CreateListOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "value",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "deliveryInformation",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.DeliveryInformation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "CreateOrderAsync",
    "RelativePath": "api/Order/CreateOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deliveryInformation",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.DeliveryInformation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "CreateOrderBySellerFromAPIAsync",
    "RelativePath": "api/Order/CreateOrderBySeller",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createOrderBySeller",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateOrderBySeller",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "DivideProductHasSameSeller",
    "RelativePath": "api/Order/DivideProductHasSameSeller",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productIdList",
        "Type": "System.Collections.Generic.List\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "GetMonthlyOrderStatistics",
    "RelativePath": "api/Order/GetMonthlyOrderStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SWP391.EventFlowerExchange.Domain.Entities.StatisticSystem, SWP391.EventFlowerExchange.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "SearchOrderByOrderId",
    "RelativePath": "api/Order/SearchOrderByOrderId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "UpdateOrderStatusAsync",
    "RelativePath": "api/Order/UpdateOrderStatusCreatedBySeller",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewAllOrderAsync",
    "RelativePath": "api/Order/ViewAllOrder",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewOrderByBuyerIdAsync",
    "RelativePath": "api/Order/ViewOrderByBuyerEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewOrderBySellerIdAsync",
    "RelativePath": "api/Order/ViewOrderBySellerEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewOrderByShipperIdAsync",
    "RelativePath": "api/Order/ViewOrderByShipperEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewOrderByStatus",
    "RelativePath": "api/Order/ViewOrderByStatusAndBuyerEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.OrderController",
    "Method": "ViewOrderDetailFromAPIAsync",
    "RelativePath": "api/Order/ViewOrderDetail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "CreateNewProduct",
    "RelativePath": "api/Product/CreateProduct",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "product",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateProduct",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetOrdersAndRatingBySellerEmail",
    "RelativePath": "api/Product/GetOrdersAndRatingBySellerEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetBannedProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Banned/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetDealProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Deal/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetAllDisableProductList",
    "RelativePath": "api/Product/GetProductList/Disable",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetDisableProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Disable/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetAllEnableProductList",
    "RelativePath": "api/Product/GetProductList/Enable",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetEnableProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Enable/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetEnableAndDisableProductList",
    "RelativePath": "api/Product/GetProductList/EnableAndDisable",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetExpiredProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Expired/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetAllInProgressProductList",
    "RelativePath": "api/Product/GetProductList/InProgress",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetInProgressProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/InProgress/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetLatestProductList",
    "RelativePath": "api/Product/GetProductList/Latest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetOldestProductList",
    "RelativePath": "api/Product/GetProductList/Oldest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetAllRejectedProductList",
    "RelativePath": "api/Product/GetProductList/Rejected",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "GetRejectedProductListBySellerEmail",
    "RelativePath": "api/Product/GetProductList/Rejected/Seller",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "SearchProductByID",
    "RelativePath": "api/Product/SearchProduct",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "SearchProductByName",
    "RelativePath": "api/Product/SearchProduct/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/UpdateProduct/{id}, {status}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RatingController",
    "Method": "CheckRatingByOrderId",
    "RelativePath": "api/Rating/CheckRatingByOrderId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RatingController",
    "Method": "CheckRatingByUserEmail",
    "RelativePath": "api/Rating/CheckRatingByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RatingController",
    "Method": "PostRating",
    "RelativePath": "api/Rating/PostRating",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "rate",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateRating",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RatingController",
    "Method": "ViewRatingByProductId",
    "RelativePath": "api/Rating/ViewRatingByProductId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RatingController",
    "Method": "ViewRatingByUserEmail",
    "RelativePath": "api/Rating/ViewRatingByUserEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "BuyerReturnAction",
    "RelativePath": "api/Refund/BuyerReturnAction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "CreateDeliveryLogForRefund",
    "RelativePath": "api/Refund/CreateDeliveryLogForRefund",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createDeliveryLog",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateDeliveryLog",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "StaffApproveRefundRequest",
    "RelativePath": "api/Refund/StaffApproveRefundRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "staffEmail",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "UpdateDeliveryLogRefundDeliveringStatus",
    "RelativePath": "api/Refund/UpdateDeliveryLogRefundDeliveringStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "UpdateDeliveryLogRefundSuccessStatus",
    "RelativePath": "api/Refund/UpdateDeliveryLogRefundSuccessStatus",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "url",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RefundController",
    "Method": "UpdateSellerRefundConfirmationStatus",
    "RelativePath": "api/Refund/UpdateSellerRefundConfirmationStatus",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "CreateRequest",
    "RelativePath": "api/Request/CreateRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "value",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "CreateNewRequest",
    "RelativePath": "api/Request/CreateRequest_Withdraw",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "value",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.RequestPayment",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "GetRequestById",
    "RelativePath": "api/Request/GetRequestById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "GetAllRequestList",
    "RelativePath": "api/Request/GetRequestList/{type}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "GetListRequestsByEmailAndType",
    "RelativePath": "api/Request/GetRequestListBy",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.RequestController",
    "Method": "UpdateRequest",
    "RelativePath": "api/Request/UpdateRequest",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "value",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "CreateTransactionAsync",
    "RelativePath": "api/Transaction/CreateTransaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transaction",
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.Transaction",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "GetRevenueOrderStatistics",
    "RelativePath": "api/Transaction/GetRevenueOrderStatistics",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SWP391.EventFlowerExchange.Domain.Entities.StatisticSystem, SWP391.EventFlowerExchange.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "ViewAllTransactionAsync",
    "RelativePath": "api/Transaction/ViewAllTransaction",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "ViewAllTransactionByUserIdAsync",
    "RelativePath": "api/Transaction/ViewAllTransactionByEmail",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "ViewAllTransactionByUserIdAndOrderIdAsync",
    "RelativePath": "api/Transaction/ViewAllTransactionByUserIdAndOrderId/{orderId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "ViewTransactionByCodeAsync",
    "RelativePath": "api/Transaction/ViewTransactionByCode/{code}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.TransactionController",
    "Method": "ViewTransactionByIdAsync",
    "RelativePath": "api/Transaction/ViewTransactionById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "IsSalaryPaid",
    "RelativePath": "api/VNPAY/CheckSalary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "year",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "month",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "CreatePaymentLink",
    "RelativePath": "api/VNPAY/create-payment-link",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.VnPayRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "GetPayementByTypeAndEmail",
    "RelativePath": "api/VNPAY/GetPaymentListBy",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "GetPaymentListByType",
    "RelativePath": "api/VNPAY/GetPaymentListBy/{type}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "type",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "PaymentCallback",
    "RelativePath": "api/VNPAY/payment-callback",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VNPAYController",
    "Method": "PaymentSalary",
    "RelativePath": "api/VNPAY/PaymentSalaryForStaffAndShipper",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "CreateVoucherAsync",
    "RelativePath": "api/Voucher/CreateVoucher",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "voucher",
        "Type": "SWP391.EventFlowerExchange.Domain.Entities.CreateVoucher",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "GetAllVoucher",
    "RelativePath": "api/Voucher/GetAllVoucher",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "GetAllVoucherValid",
    "RelativePath": "api/Voucher/GetAllVoucherValid",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "price",
        "Type": "System.Decimal",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "RemoveVoucherAsync",
    "RelativePath": "api/Voucher/RemoveVoucher/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "SearchVoucherByCodeAsync",
    "RelativePath": "api/Voucher/SearchVoucherByCode/{code}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "code",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "SearchVoucherByIdAsync",
    "RelativePath": "api/Voucher/SearchVoucherById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SWP391.EventFlowerExchange.API.Controllers.VoucherController",
    "Method": "UpdateVoucherAsync",
    "RelativePath": "api/Voucher/UpdateVoucher",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "voucher",
        "Type": "SWP391.EventFlowerExchange.Domain.ObjectValues.Voucher",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]